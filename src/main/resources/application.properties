# Scheduler

spring.application.name = IP Scheduler

server.port=8080

spring.datasource.name = schedDb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://kaui01:5432/ironpillars?currentSchema=ipjobdb
spring.datasource.username=shriram
spring.datasource.password=Shriram123
spring.datasource.initialize=true
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.maxIdle = 5

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.show-sql=true
#spring.jpa.generate-ddl=true

#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
#org.quartz.jobStore.class = org.terracotta.quartz.TerracottaJobStore
#org.quartz.jobStore.tcConfigUrl = localhost:9510

#org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
##org.quartz.jobStore.useProperties=true
#org.quartz.jobStore.tablePrefix=qrtz_
#org.quartz.jobStore.dataSource = jobDS
#org.quartz.jobStore.isClustered=false
#org.quartz.jobStore.misfireThreshold=1000
#org.quartz.threadPool.threadCount=5 //number of concurrent jobs that can be run.
#org.quartz.scheduler.instanceId=AUTO
#org.quartz.plugin.shutdownHook.class=org.quartz.plugins.management.ShutdownHookPlugin
#org.quartz.plugin.shutdownHook.cleanShutdown=true

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.quartz.properties.org.quartz.dataSource.name = schedDb
#spring.quartz.properties.org.quartz.dataSource.schedDb.driver = org.postgresql.Driver
#spring.quartz.properties.org.quartz.dataSource.schedDb.URL = jdbc:postgresql://kaui01:5432/ironpillars?currentSchema=ipjobdb
#spring.quartz.properties.org.quartz.dataSource.schedDb.user = shriram
#spring.quartz.properties.org.quartz.dataSource.schedDb.password = Shriram123
#spring.quartz.properties.org.quartz.dataSource.schedDb.maxConnections = 5


## QuartzProperties


## Quartz Properties
spring.quartz.properties.org.quartz.jobStore.useProperties = true
spring.quartz.properties.org.quartz.jobStore.dataSource = schedDb
spring.quartz.job-store-type = jdbc
spring.quartz.jdbc.platform = postgres
spring.quartz.jdbc.initialize-schema = never
spring.quartz.properties.org.quartz.threadPool.threadCount = 30
# spring.quartz.properties.org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX   # Datastore unavailable error will crop up if this is enabled
# spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
spring.quartz.properties.org.quartz.jobStore.misfireThreshold = 60000
spring.quartz.properties.org.quartz.jobStore.tablePrefix = qrtz_
spring.quartz.properties.org.quartz.jobStore.isClustered = true
spring.quartz.properties.org.quartz.plugin.shutdownHook.class = org.quartz.plugins.management.ShutdownHookPlugin
spring.quartz.properties.org.quartz.plugin.shutdownHook.cleanShutdown = true
spring.quartz.properties.org.quartz.plugin.jobHistory.class=org.quartz.plugins.history.LoggingJobHistoryPlugin
spring.quartz.properties.org.quartz.plugin.jobHistory.jobSuccessMessage=Job [{1}.{0}] execution complete and reports: {8}
spring.quartz.properties.org.quartz.plugin.jobHistory.jobToBeFiredMessage=Job [{1}.{0}] to be fired by trigger [{4}.{3}], re-fire: {7}


spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO

spring.quartz.scheduler-name = ipillarJobScheduler
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true

